#include<stdio.h>
#include<string.h>
#include<windows.h>
#include<stdlib.h>
#include<math.h>
//判断输出1-100的奇数
//int main()
//{
//	int i = 1;
//	while (i <= 100)
//	{
//		if(i%2 == 1)
//			printf("有 %d\n", i);
//		i++;
//	}	
//	return 0;
//}
//计算n的阶乘
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	scanf("%d", &n);
//	for (i = 1; i <= n; i++)
//	{
//		ret = ret * i;
//	}
//	printf("ret=%d\n", ret);
//	return 0;
//} 
 
//计算 1!+2!+3!+……+10!
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	int sum = 0;
//	for (n = 1; n <= 3; n++)
//	{
//		ret = 1;
//		for (i = 1; i <= n; i++)
//		{
//			ret = ret * i;
//		}//n的阶乘
//		sum = sum + ret;
//	}
//	printf("sum=%d\n", sum);
//	return 0;
//} 
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 1;
//	int sum = 0;
//	for (n = 1; n <= 10; n++)
//	{
//			ret = ret * n;
//		//n的阶乘
//		sum = sum + ret;
//	}
//	printf("sum=%d\n", sum);
//	return 0;
//}

//在一个有序数组中查找具体的某个数字n（二分查找）
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int k = 7;
//	//写一个代码，在arr数组（有序的）找到7
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	for (i = 0; i < sz; i++)
//	{
//		if (k == arr[i])
//		{
//			printf("找到了，下标是：%d\n", i);
//		}
//	}
//	if (k == sz)
//		printf("找不到\n");
//	return 0;
//}
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int k = 17;
//	int sz = sizeof(arr) / sizeof(arr[0]);//计算元素个数
//	int left = 0;//左下标
//	int right = sz - 1;//右下标
//	while (left <= right)
//	{
//		int mid = (left + right) / 2;
//		if (arr[mid] > k)
//		{
//			right = mid - 1;
//		}
//		else if (arr[mid] < k)
//		{
//			left = mid + 1;
//		}
//		else
//		{
//			printf("找到了，下标是：%d\n", mid);
//			break;
//		}
//	}
//	if(left > right)
//	{
//		printf("找不到\n");
//	}
//		return 0;
//}

//编写代码，演示多个字符从两端移动，向中间汇聚。
//#include<string.h>//strlen
//#include<windows.h>//Sleep
//#include<stdlib.h>//system
//int main()
//{
//	char arr1[] = "Miss Xiao Pu all the time";
//	char arr2[] = "^************************";
//	int left = 0;
//	/*int right = sizeof(arr1) / sizeof(arr1[0]) - 2;*/
//	int right = strlen(arr1) - 1;
//	while (left <= right)
//	{
//		arr2[left] = arr1[left];
//		arr2[right] = arr1[right];
//		printf("%s\n", arr2);
//		Sleep(1000);//等待一秒
//		system("cls");//执行系统命令的一个函数- cls-清空屏幕
//		left++;
//		right--;
//	}
//	printf("%s\n", arr2);
//	return 0;
//}

//编写代码实现，模拟用户登录情景，并且只能登录三次。（只允许输入三次密码，如果密码正确则
//提示登录成，如果三次均输入错误，则退出程序。
//int main()
//{
//	int i = 0;
//	char password[20] = { 0 };
//	for (i = 0; i < 3; i++)
//	{
//		printf("请输入密码：>");
//		scanf("%s", password);
//		//if (password == "123456")//==等号不能比较两个字符串是否相等，应该使用一个库函数- strcmp
//		if(strcmp(password,"123456")==0)
//		{
//			printf("登陆成功\n");
//			break;
//		}
//		else 
//		{
//			printf("密码错误\n");
//		}
//	}
//	if (i == 3)
//		printf("三次密码均错误，退出程序\n");
//	return 0;
//}

//从大到小输出3个值 
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	scanf("%d%d%d", &a, &b, &c);
//	if (a < b)
//	{
//		int tmp = a;
//		a = b;
//		b = tmp;
//	 }
//	if (a < c)
//		{
//			int tmp = a;
//			a = c;
//			c = tmp;
//		}
//	if (b < c)
//	{
//		int tmp = b;
//		b = c;
//		c = tmp;
//	}
//	printf("%d  %d  %d\n", a,b,c);
//	return 0;
//}

//打印100以内三的倍数
//int main()
//{
//	int i = 0;
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 3 == 0)
//			printf("%d\n", i);
//	}
//	return 0;
//}

//最大公约数  给定两个数，求两个数的最大公约数
//int main()
//{
//	int a = 24;
//	int b = 18;
//	int r = 0;
//	scanf("%d%d", &a, &b);
//	while (r=a % b)
//	{
//		//r = a % b;
//		a = b;
//		b = r;
//	}
//	printf("%d\n", b);
//	return 0;
//} 

//打印闰年  打印1000年到2000年之间的闰年
//int main()
//{
//	int year = 0;
//	int count = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
		////判断year是否为闰年
		////1.能被4整除且不能被100整除
		////2.能被400整除
		//if (year % 4 == 0 && year % 100 != 0)
		//{
		//	printf("%d ", year);
		//	count++;
		//}
		//else if (year % 400 == 0)
		//{
		//	printf("%d ", year);
		//	count++;
		//}
//		if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))
//		{
//			printf("%d ", year);
//			count++;
//		}
//	}
//	printf("\n count=%d\n", count);
//	return 0;
//}

//打印素数   打印100-200之间的素数
//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 100; i <= 200; i++)
//		//for (i = 101; i <= 200; i+=2)
//	{
//		//判断i是否为素数
//		//1. 试除法
//		//产生2->i-1
//		//2.
//		//
//		int j = 0;
//		//for (j = 2; j < i; j++)
//			for (j = 2; j<=sqrt(i); j++)
//		{
//			if (i % j == 0)
//			{
//				break;
//			}
//		}
//		//if (j == i)
//			if (j>sqrt(i))
//				//sprt - 开平方的数学库函数  #include<math.h>
//		        //a和b中至少有一个数字《=开平方i
//			{
//			printf("%d ", i);
//			count++;
//		}
//	}
//	printf("\n count=%d\n", count);
//	return 0;
//}
////素数求解的n种境界

//数9的个数  1- 100出现多少个数字9
//int main()
//{
//	int a = 0;
//	int count = 0;
//	for (a = 1; a <= 100; a++)
//	{
//		if (a % 10 == 9 )
//			count++;
//		if (a / 10 == 9)
//			count++;
//	}
//	printf("\n count=%d\n", count);
//	return 0;
//}

//分数求和  计算1/1-1/2+1/3-1/4......+1/99-1/100
//int main()
//{
//	int i = 0;
//	double sum = 0.0;
//	int flag = 1;
//	for (i = 1; i <= 100; i++)
//	{
//		sum += flag*1.0 / i;
//		flag = -flag;
//	}
//	printf("%lf\n", sum);
//	return 0;
//}

//求最大值  求10个数中最大值
//int main()
//{
//	//int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int arr[] = { -1,-2,-3,-4,-5,-6,-7,-8,-9,-10 };
//	//int max = 0;
//	int max = arr[0];
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	//for (i = 0; i < sz; i++)
//	for (i = 1; i < sz; i++)
//	{
//		if (arr[i] > max)
//		{
//			max = arr[i];
//		}
//	}
//	printf("max = %d\n", max);
//	return 0; 
//}

//乘法口诀表  9*9
//int main()
//{
//	int i = 0;
//	for (i = 1; i <= 9; i++)
//	{
//		int j = 0;
//		for (j = 1; j <= i; j++)
//		{
//			printf("%d*%d=%-2d ", i, j, i * j);//%2d 右对齐%-2d左对齐
//		}
//		printf("\n");
//	}
//	return 0;
//}
